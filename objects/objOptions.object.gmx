<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_font(global.MM3font);
draw_set_valign(fa_top);
draw_set_halign(fa_center);

if !audio_is_playing(bgmMainMenu) {
    playMusicVolume(bgmMainMenu, 0.7);
}

menu[0] = "WINDOW SCALE";
value[0] = "3X";
var current_item = 1;

menu[current_item] = "SFX VOLUME";
value[current_item] = 11;
current_item++;

menu[current_item] = "MUSIC VOLUME";
value[current_item] = 11;
current_item++;

menu[current_item] = "DIFFICULTY";
value[current_item] = "'MERICAN";
current_item++;

menu[current_item] = "SHOW LIVES";
value[current_item] = global.showLives;
current_item++;

menu[current_item] = "DAMAGE POPUP";
value[current_item] = global.enableDamageNumbers;
current_item++;

menu[current_item] = "BACK";

num_menu_items = array_length_1d(menu);

selected = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(objFadeout)) exit;

if global.keyUpPressed {
    selected--;
    if selected &lt; 0 {
        selected = num_menu_items - 1;
    }
    playSFX(sfxMenuMove);
}
else if global.keyDownPressed || global.keySelectPressed {
    selected++;
    if selected &gt;= num_menu_items {
        selected = 0;
    }
    playSFX(sfxMenuMove);
}
else if global.keyPausePressed || global.keyJumpPressed || global.keyShootPressed {
    switch menu[selected] {
        
        case "WINDOW SCALE":
            
            break;
        
        case "SFX VOLUME":
            
            break;
        case "MUSIC VOLUME":
            
            break;
        
        case "DIFFICULTY":
            
            break;
        
        case "SHOW LIVES":
            playSFX(sfxMenuSelect);
            global.showLives = !global.showLives;
            value[selected] = global.showLives;
            break;
        
        case "DAMAGE POPUP":
            playSFX(sfxMenuSelect);
            global.enableDamageNumbers = !global.enableDamageNumbers;
            value[selected] = global.enableDamageNumbers;
            break;
            
        case "BACK":
            playSFX(sfxMenuSelect);            
            var ID = instance_create(0, 0, objFadeout);
            ID.type = "room";
            ID.myRoom = rmMainMenu;
            break;
        //default:
        //    playSFX(sfxMenuSelect3);
        //    waiting = true;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);

draw_text(room_width / 2, 30, "OPTIONS");

var initial_y = 50;
var vspace = 12;
var left = 70;

draw_set_halign(fa_left);

for (var i = 0; i &lt; num_menu_items; i++) {
    if i &gt;= num_menu_items - 1 {
        draw_set_halign(fa_center);
        draw_text(room_width / 2, i * vspace + initial_y, menu[i]);
    }
    else {
        draw_text(left, i * vspace + initial_y, menu[i]);
        draw_text(room_width / 2 + 50/*20*/, i * vspace + initial_y, string(value[i])); 
    }
}

if selected &gt;= num_menu_items - 1 {
    draw_sprite(sprPassArrow, 0, room_width / 2 - 24, selected * vspace + initial_y + 3);
}
else {
    draw_sprite(sprPassArrow, 0, left - 10, selected * vspace + initial_y + 3);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
