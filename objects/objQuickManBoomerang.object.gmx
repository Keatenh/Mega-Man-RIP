<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprQuickBoomerang</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

contactDamage = 3;
image_speed = 1/6;

dist  = 0;
phase = 0;
timer = 45;

_speed = 4.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; update_rate &gt;= 1/* &amp;&amp; !global.flashStopper */ {
    switch phase {
    case 0: //intial movement toward player
        //note that dist is orignally set by QM object
        dist -= sqrt(sqr(xspeed)+sqr(yspeed));
        if dist &lt; 0 {
            xspeed = 0;
            yspeed = 0;
            phase = 1;
        }else{
            xspeed = _xspeed;
            yspeed = _yspeed;
        }
        break;
        
    case 1: //pause before moving again
        timer -= 1;
        if timer &lt;= 0 {
            phase = 2;
            var dir;
            if instance_exists(prtPlayer)
                dir = point_direction(x,y,prtPlayer.x,prtPlayer.y);
            else
                dir = random(360);
            //added some variables bc prt obj already adds x/yspeeds to x/y
            _xspeed = cos(degtorad(dir))* _speed;
            _yspeed = -sin(degtorad(dir))* _speed;
        }
        break;
    
    case 2: //head back toward player
        xspeed = _xspeed;
        yspeed = _yspeed;
        break;
    }
        
}else if update_rate &lt; 1/*if global.flashstopper*/ { //changed to be affected by time slow weapon
    instance_create(x,y,objExplosion);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
