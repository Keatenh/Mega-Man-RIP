<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWoWLarge</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_xscale = -1;
healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 4;

//Enemy specific code
xspeed = 0;
yspeed = 0;
image_speed = 0.2;
image_index = 0;

damage[objFlameSpout] = 0;

//spawner = noone; //can tell if this is spawned by a lantern

//Children
s1 = noone; 
s2 = noone;

timer = 0;
growTime = 1*room_speed;
maxInstances = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//----BEFORE prt enemy determines we are dead----
//Spawning Children 
if (insideView() &amp;&amp; (healthpoints &lt;= 0)&amp;&amp; (dead == false)){ //We killed it this past frame
    //count up how many WoWs exist
    global.wowInstanceCount = 0;
    with(objWoW){
        global.wowInstanceCount +=1;
    }

    //Number of inst in view
    if (global.wowInstanceCount &lt;= maxInstances - 1){  //we get a new gain of +1 ( =+2-1 )
        if ((sprite_index == sprWoWLarge)&amp;&amp;(s1 == noone)&amp;&amp;(s2 == noone)){
            s1 = instance_create(x,y-30,objWoW);
            s1.sprite_index = sprWoWSmall;
            s1.xspeed = -1;
            s1.yspeed = -2;
            s1.respawn = false;
            s2 = instance_create(x,y-30,objWoW);
            s2.sprite_index = sprWoWSmall;
            s2.xspeed = 1;
            s2.yspeed = -2;
            s2.respawn = false;
        }
    }
}

////////////////////////////
///////////////////////////
event_inherited();
////////////////////////////
///////////////////////////

if (insideView())
{
    
}else{
    // Forget Children
    s1 = noone; 
    s2 = noone;
}


if global.frozen == false &amp;&amp; dead == false
{
    checkGround();
    gravityCheckGroundExt(0.125);
    generalCollision();
    
    //Interaction with water / spikes
    if (place_meeting(x,y+yspeed,objWater) || place_meeting(x,y+yspeed+4,objMM2Conveyor)|| place_meeting(x,y+yspeed+4,objSpike)){
        healthpoints = 0;
    }
    
    
    if instance_exists(prtPlayer)
    {
        if x &lt; prtPlayer.x
            image_xscale = 1;
        else
            image_xscale = -1;
        
    }
    
    
    
    //If we stay alive for a certain time, evolve
    if (sprite_index == sprWoWSmall){
        if (timer &gt; growTime){
            sprite_index = sprWoWLarge;
        }
    }
    
    //Stop moving when we hit the ground
    if (ground){
        xspeed = 0;
    }
    
    x += xspeed;
    y += yspeed;
    
    timer += 1;
}
else
{
    if dead == true
    {
        image_index = 0;
        timer = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
